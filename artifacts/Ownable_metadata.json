{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "NOT_CURRENT_OWNER",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol",
			"events": {
				"OwnershipTransferred(address,address)": {
					"details": "An event which is triggered when the owner is changed.",
					"params": {
						"newOwner": "The address of the new owner.",
						"previousOwner": "The address of the previous owner."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "The constructor sets the original `owner` of the contract to the sender account."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"_newOwner": "The address to transfer ownership to."
					}
				}
			},
			"stateVariables": {
				"NOT_CURRENT_OWNER": {
					"details": "Error constants."
				},
				"owner": {
					"details": "Current owner address."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts\\src\\dapplib\\contracts\\terrasolstice_coin.sol": "Ownable"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts\\src\\dapplib\\contracts\\terrasolstice_coin.sol": {
			"keccak256": "0x6a9a4850a518ed6409301ef4914d1d5bc92062abace76db7aca244d38b2e93f3",
			"license": "MIT",
			"urls": [
				"bzz-raw://644a1d6ca562115da1fa50cbf459382dd8df724de645f6b7cc3ef74b34a4cc9b",
				"dweb:/ipfs/QmaXr2Ert8tNAhengQyHMzna9XcUYqKrUvqQZqC2c8niH2"
			]
		}
	},
	"version": 1
}